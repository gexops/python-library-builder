name: Build pymupdf/PyMuPDF

on:
  workflow_dispatch:
    inputs:
      repo:
        default: pymupdf/PyMuPDF
        description: Github repo
        required: true
      branch:
        default: master
        description: Github branch
        required: true

jobs:
  build-pymupdf:
    name: >
      build on ${{ matrix.platform || matrix.os }} (${{ matrix.target }} - ${{ matrix.manylinux || 'auto' }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir
          - os: windows
            ls: dir
            target: i686
            python-architecture: x86
          - os: ubuntu
            platform: linux
            target: i686
          - os: ubuntu
            platform: linux
            target: armv7
          - os: ubuntu
            platform: linux
            target: x86_64
            manylinux: musllinux_1_1
          - os: ubuntu
            platform: linux
            target: aarch64
            manylinux: musllinux_1_1
    
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.branch }}

      - name: set up python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: ${{ matrix.python-architecture || 'x64' }}

      - run: pip install -U twine

      - name: build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          args: --release --out dist

      - run: ${{ matrix.ls || 'ls -lh' }} dist/

      - run: twine check dist/*

      - uses: actions/upload-artifact@v3
        with:
          name: pypi_files
          path: dist

  list-pypi-files:
    needs: [build-pymupdf]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.branch }}

      - name: get dist artifacts
        uses: actions/download-artifact@v3
        with:
          name: pypi_files
          path: dist

      - run: ls -lh dist/

  release:
    needs: ['build-pymupdf']
    if: "success()"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.branch }}

      - name: set up python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - run: pip install -U twine

      - name: get dist artifacts
        uses: actions/download-artifact@v3
        with:
          name: pypi_files
          path: dist

      - run: twine check dist/*

      - name: upload to pypi
        run: twine upload dist/*
        env:
          TWINE_REPOSITORY_URL: ${{ secrets.pypi_repository }}
          TWINE_USERNAME: ${{ secrets.pypi_username }}
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
          