name: Build pymupdf/PyMuPDF v1

on:
  workflow_dispatch:
    inputs:
      repo:
        default: pymupdf/PyMuPDF
        description: Github repo
        required: true
      branch:
        default: master
        description: Github branch
        required: true

jobs:
  build-pymupdf:
    name: >
      build on ${{ matrix.platform || matrix.os }} (${{ matrix.target }} - ${{ matrix.manylinux || 'auto' }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir
            python-architecture: x86
          # - os: ubuntu
          #   platform: linux
          #   target: i686
          # - os: ubuntu
          #   platform: linux
          #   target: armv7
          # - os: ubuntu
          #   platform: linux
          #   target: x86_64
          #   manylinux: musllinux_1_1
          # - os: ubuntu
          #   platform: linux
          #   target: aarch64
          #   manylinux: musllinux_1_1
    
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.branch }}

      - name: set up python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: ${{ matrix.python-architecture || 'x64' }}

      - run: pip install -U twine

      # - name: build wheels
      #   uses: messense/maturin-action@v1
      #   with:
      #     target: ${{ matrix.target }}
      #     manylinux: ${{ matrix.manylinux || 'auto' }}
      #     args: --release --out dist
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.6.1
        # Set extra cibuildwheel options using environmental variables.
        #
        env:
            # These exclusions are copied from PyMuPDF-1.19.
            CIBW_SKIP: "pp* *i686 *-musllinux_* cp36*"
            # On Linux, tell cibuildwheel to build native archs ('auto'), and
            # aarch64.
            #
            CIBW_ARCHS_LINUX: auto aarch64
            # For testing, build for single python version.
            #CIBW_BUILD: "cp39*"
            # Get cibuildwheel to run pytest with each wheel.
            # Setting verbosity here sometimes seems to result in SEGV's when
            # running pytest.
            CIBW_TEST_REQUIRES: "fontTools pytest"
            CIBW_TEST_COMMAND: "pytest -s {project}/tests || true"
            CIBW_BUILD_VERBOSITY: 3

      - run: ${{ matrix.ls || 'ls -lh' }} wheelhouse/

      - run: twine check wheelhouse/*

      - name: upload to pypi
        run: twine upload wheelhouse/*
        env:
          TWINE_REPOSITORY_URL: ${{ secrets.pypi_repository }}
          TWINE_USERNAME: ${{ secrets.pypi_username }}
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
          
